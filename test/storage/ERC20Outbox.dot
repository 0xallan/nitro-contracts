
digraph StorageDiagram {
rankdir=LR
color=black
arrowhead=open
node [shape=record, style=filled, fillcolor=gray95 fontname="Courier New"]
3 [label="ERC20Outbox \<\<Contract\>\>\n | {{ slot| 0 | 1 | 2 | 3 | 4-7 | 8-49 | 50 } | { type: \<inherited contract\>.variable (bytes) | {  unallocated (12)  |  address: AbsOutbox.rollup (20) } | {  unallocated (12)  |  IBridge: AbsOutbox.bridge (20) } | {  mapping\(uint256=\>bytes32\): AbsOutbox.spent (32) } | {  mapping\(bytes32=\>bytes32\): AbsOutbox.roots (32) } | { <11> L2ToL1Context: AbsOutbox.context (128) } | { <54> uint256[42]: AbsOutbox.__gap (1344) } | {  unallocated (31)  |  uint8: nativeTokenDecimals (1) }}}"]

1 [label="L2ToL1Context \<\<Struct\>\>\n | {{ slot| 4 | 5 | 6 | 7 } | { type: variable (bytes) | {  uint128: timestamp (16)  |  uint128: l2Block (16) } | {  bytes32: outputId (32) } | {  uint96: l1Block (12)  |  address: sender (20) } | {  uint256: withdrawalAmount (32) }}}"]

2 [label="uint256[42]: __gap \<\<Array\>\>\n | {{ slot| 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 } | { type: variable (bytes) | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) } | {  uint256 (32) }}}"]

 3:11 -> 1
 3:54 -> 2
}